# ==============================================================================
# LOGITRACK - TESTES DA API DE ORDENS DE TRANSPORTE
# ==============================================================================
# 
# üìã INSTRU√á√ïES:
# 1. Instale a extens√£o "REST Client" no VS Code
# 2. Execute cada requisi√ß√£o clicando em "Send Request" acima de cada ###
# 3. IMPORTANTE: Execute login primeiro para obter tokens
# 4. Substitua os tokens nos headers Authorization
#
# üéØ ORDEM RECOMENDADA PARA TESTES:
# 1. Verificar endpoints dispon√≠veis
# 2. Fazer login para obter tokens
# 3. Criar uma OT
# 4. Listar OTs
# 5. Ver detalhes da OT
# 6. Atualizar OT
# 7. Testar transfer√™ncia
# 8. Upload de arquivo
# 9. Finalizar OT
#
# ==============================================================================

# VARI√ÅVEIS GLOBAIS (atualize conforme necess√°rio)
@baseURL = http://localhost:8000
@authURL = {{baseURL}}/api/auth
@otsURL = {{baseURL}}/api/ots

# Vari√°veis para tokens (cole ap√≥s fazer login)
@accessToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5MTY4NDg2LCJpYXQiOjE3NDkxNjQ4ODYsImp0aSI6IjdlYWVlNDBkOGVlZjQ4NjBhYmY2ZDQ0ZDE4ZTdiMjAxIiwidXNlcl9pZCI6Mn0.y7-KP-FAhsXZXiYHq0qf53k6yI3AuJUrsNh4SlCprFE
@refreshToken = 

# Vari√°veis de teste
@testOTId = 
@testMotoristaId = 

# ==============================================================================
# üè† 1. VERIFICA√á√ÉO INICIAL
# ==============================================================================

### 1.1 Verificar se API est√° funcionando
GET {{baseURL}}
Content-Type: application/json

# Esperado: Informa√ß√µes da API incluindo endpoint /api/ots/

### 1.2 Ver endpoints de OT dispon√≠veis
GET {{otsURL}}/endpoints/
Content-Type: application/json

# Esperado: Lista completa de todos os endpoints de OT

# ==============================================================================
# üîê 2. AUTENTICA√á√ÉO (OBRIGAT√ìRIO)
# ==============================================================================

### 2.1 Fazer login como motorista
POST {{authURL}}/login/
Content-Type: application/json

{
    "email": "jose@email.com",
    "password": "Laura@2024"
}

# üö® IMPORTANTE: Copie o access_token da resposta e cole na vari√°vel @accessToken acima!

### 2.2 (Opcional) Login como log√≠stica para testes avan√ßados
POST {{authURL}}/login/
Content-Type: application/json

{
    "email": "logistica1@teste.com",
    "password": "senha123456"
}

# ==============================================================================
# üöö 3. CRUD B√ÅSICO - ORDENS DE TRANSPORTE
# ==============================================================================

### 3.1 Criar nova OT (apenas motoristas)
POST {{otsURL}}/
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5MTY4NDg2LCJpYXQiOjE3NDkxNjQ4ODYsImp0aSI6IjdlYWVlNDBkOGVlZjQ4NjBhYmY2ZDQ0ZDE4ZTdiMjAxIiwidXNlcl9pZCI6Mn0.y7-KP-FAhsXZXiYHq0qf53k6yI3AuJUrsNh4SlCprFE
Content-Type: application/json

{
    "cliente_nome": "Empresa ABC Ltda",
    "endereco_entrega": "Rua das Flores, 123 - Centro",
    "cidade_entrega": "Campinas",
    "observacoes": "Entrega urgente - Cliente preferencial",
    "latitude_origem": -23.5505,
    "longitude_origem": -46.6333,
    "endereco_origem": "CD S√£o Paulo - Vila Ol√≠mpia"
}

# üö® SUBSTITUA o token pelo obtido no login!
#
# Esperado:
# - Status 201 Created
# - OT criada com n√∫mero autom√°tico (ex: OT202412060001)
# - Status inicial: INICIADA
# - Motorista criador = motorista atual = usu√°rio logado
#
# üêõ DEBUGGING:
# - Coloque breakpoint em OrdemTransporteListCreateView.create()
# - Acompanhe gera√ß√£o autom√°tica do n√∫mero da OT
# - Veja como motorista_criador √© definido automaticamente

### 3.2 Listar OTs do usu√°rio logado
GET {{otsURL}}/
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5MTY4NDg2LCJpYXQiOjE3NDkxNjQ4ODYsImp0aSI6IjdlYWVlNDBkOGVlZjQ4NjBhYmY2ZDQ0ZDE4ZTdiMjAxIiwidXNlcl9pZCI6Mn0.y7-KP-FAhsXZXiYHq0qf53k6yI3AuJUrsNh4SlCprFE
Content-Type: application/json

# Esperado:
# - Status 200 OK
# - Lista das OTs do motorista (apenas suas pr√≥prias)
# - Estat√≠sticas por status
# - Dados resumidos para performance
#
# üêõ DEBUGGING:
# - Coloque breakpoint em get_queryset()
# - Observe filtragem por usu√°rio (motorista s√≥ v√™ as suas)
# - Compare com usu√°rio log√≠stica (v√™ todas)

### 3.3 Ver detalhes de uma OT espec√≠fica
GET {{otsURL}}/1/
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5MTY4NDg2LCJpYXQiOjE3NDkxNjQ4ODYsImp0aSI6IjdlYWVlNDBkOGVlZjQ4NjBhYmY2ZDQ0ZDE4ZTdiMjAxIiwidXNlcl9pZCI6Mn0.y7-KP-FAhsXZXiYHq0qf53k6yI3AuJUrsNh4SlCprFE
Content-Type: application/json

# üö® SUBSTITUA "1" pelo ID da OT criada no passo 3.1!
#
# Esperado:
# - Status 200 OK se for dono da OT
# - Status 403 Forbidden se tentar ver OT de outro motorista
# - Dados completos: arquivos, transfer√™ncias, timeline
#
# üêõ DEBUGGING:
# - Coloque breakpoint em get_object()
# - Observe verifica√ß√£o de permiss√µes
# - Veja dados completos vs resumidos

### 3.4 Atualizar dados da OT
PATCH {{otsURL}}/1/
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5MTY4NDg2LCJpYXQiOjE3NDkxNjQ4ODYsImp0aSI6IjdlYWVlNDBkOGVlZjQ4NjBhYmY2ZDQ0ZDE4ZTdiMjAxIiwidXNlcl9pZCI6Mn0.y7-KP-FAhsXZXiYHq0qf53k6yI3AuJUrsNh4SlCprFE
Content-Type: application/json

{
    "observacoes": "Entrega urgente - Cliente confirmou recebimento para hoje √†s 14h",
    "status": "EM_CARREGAMENTO"
}

# Esperado:
# - Status 200 OK
# - Dados atualizados
# - Registro de atualiza√ß√£o criado automaticamente
# - Valida√ß√£o de transi√ß√£o de status
#
# üêõ DEBUGGING:
# - Coloque breakpoint em update()
# - Acompanhe valida√ß√£o de transi√ß√£o de status
# - Veja cria√ß√£o autom√°tica de AtualizacaoOT

# ==============================================================================
# üîÑ 4. A√á√ïES ESPEC√çFICAS
# ==============================================================================

### 4.1 Atualizar apenas status da OT
PATCH {{otsURL}}/1/status/
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5MTY4NDg2LCJpYXQiOjE3NDkxNjQ4ODYsImp0aSI6IjdlYWVlNDBkOGVlZjQ4NjBhYmY2ZDQ0ZDE4ZTdiMjAxIiwidXNlcl9pZCI6Mn0.y7-KP-FAhsXZXiYHq0qf53k6yI3AuJUrsNh4SlCprFE
Content-Type: application/json

{
    "status": "EM_TRANSITO",
    "observacao": "Saindo do CD - Previs√£o de chegada: 14h30"
}

# Esperado:
# - Status 200 OK
# - Status atualizado com valida√ß√£o de transi√ß√£o
# - Observa√ß√£o registrada
#
# üêõ DEBUGGING:
# - Observe valida√ß√£o de transi√ß√µes v√°lidas
# - INICIADA ‚Üí EM_CARREGAMENTO ‚úÖ
# - EM_CARREGAMENTO ‚Üí EM_TRANSITO ‚úÖ
# - EM_TRANSITO ‚Üí ENTREGUE ‚úÖ
# - Estados finais n√£o podem transicionar ‚ùå

### 4.2 Transferir OT para outro motorista
POST {{otsURL}}/2/transferir/
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5MTY4NDg2LCJpYXQiOjE3NDkxNjQ4ODYsImp0aSI6IjdlYWVlNDBkOGVlZjQ4NjBhYmY2ZDQ0ZDE4ZTdiMjAxIiwidXNlcl9pZCI6Mn0.y7-KP-FAhsXZXiYHq0qf53k6yI3AuJUrsNh4SlCprFE
Content-Type: application/json

{
    "motorista_destino_id": 3,
    "motivo": "Ve√≠culo apresentou problema mec√¢nico - transferindo para van",
    "latitude": -23.5489,
    "longitude": -46.6388,
    "endereco": "Rod. Anhanguera km 20 - Posto Shell"
}

# üö® SUBSTITUA "3" pelo ID de outro motorista real!
#
# Esperado:
# - Status 201 Created
# - Se for o pr√≥prio motorista: transfer√™ncia APROVADA automaticamente
# - Se for outro motorista: transfer√™ncia PENDENTE (precisa aprova√ß√£o)
# - Registro de transfer√™ncia criado
#
# üêõ DEBUGGING:
# - Coloque breakpoint em TransferirOTView.post()
# - Observe diferen√ßa entre transfer√™ncia direta vs solicita√ß√£o
# - Veja atualiza√ß√£o autom√°tica do motorista_atual

### 4.3 Criar segunda OT para testar busca
POST {{otsURL}}/
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5MTY4NDg2LCJpYXQiOjE3NDkxNjQ4ODYsImp0aSI6IjdlYWVlNDBkOGVlZjQ4NjBhYmY2ZDQ0ZDE4ZTdiMjAxIiwidXNlcl9pZCI6Mn0.y7-KP-FAhsXZXiYHq0qf53k6yI3AuJUrsNh4SlCprFE
Content-Type: application/json

{
    "cliente_nome": "Supermercado XYZ",
    "endereco_entrega": "Av. Paulista, 1000 - Bela Vista",
    "cidade_entrega": "S√£o Paulo",
    "observacoes": "Entregar no recebimento - Hor√°rio: 8h √†s 17h"
}

# ==============================================================================
# üìé 5. UPLOAD DE ARQUIVOS
# ==============================================================================

### 5.1 Upload de canhoto (simular)
# POST {{otsURL}}/1/arquivos/
# Authorization: Bearer SEU_TOKEN_AQUI
# Content-Type: multipart/form-data

# arquivo=@/caminho/para/canhoto.jpg
# tipo=CANHOTO
# descricao=Canhoto assinado pelo cliente

# üìù NOTA: O VS Code REST Client n√£o suporta upload de arquivo facilmente.
# Use Postman ou curl para testar upload:
#
# curl -X POST http://localhost:8000/api/ots/1/arquivos/ \
#   -H "Authorization: Bearer SEU_TOKEN" \
#   -F "arquivo=@canhoto.jpg" \
#   -F "tipo=CANHOTO" \
#   -F "descricao=Canhoto assinado"

# ==============================================================================
# üèÅ 6. FINALIZA√á√ÉO
# ==============================================================================

### 6.1 Finalizar OT como entregue
POST {{otsURL}}/3/finalizar/
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5MTY4NDg2LCJpYXQiOjE3NDkxNjQ4ODYsImp0aSI6IjdlYWVlNDBkOGVlZjQ4NjBhYmY2ZDQ0ZDE4ZTdiMjAxIiwidXNlcl9pZCI6Mn0.y7-KP-FAhsXZXiYHq0qf53k6yI3AuJUrsNh4SlCprFE
Content-Type: application/json

{
    "observacoes_entrega": "Entregue ao Sr. Jo√£o Silva na portaria principal. Recebimento confirmado √†s 14:25.",
    "latitude_entrega": -22.9068,
    "longitude_entrega": -47.0626,
    "endereco_entrega_real": "Empresa ABC - Portaria Principal"
}

# Esperado:
# - Status 200 OK
# - OT marcada como ENTREGUE
# - data_finalizacao preenchida automaticamente
# - Dados de entrega registrados
# - OT n√£o pode mais ser editada
#
# üêõ DEBUGGING:
# - Coloque breakpoint em FinalizarOTView.post()
# - Observe valida√ß√£o de status antes da finaliza√ß√£o
# - Veja atualiza√ß√£o autom√°tica de data_finalizacao

# ==============================================================================
# üîç 7. BUSCA E FILTROS
# ==============================================================================

### 7.1 Buscar OT por n√∫mero
GET {{otsURL}}/buscar/?numero_ot=OT20241206
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5MTY4NDg2LCJpYXQiOjE3NDkxNjQ4ODYsImp0aSI6IjdlYWVlNDBkOGVlZjQ4NjBhYmY2ZDQ0ZDE4ZTdiMjAxIiwidXNlcl9pZCI6Mn0.y7-KP-FAhsXZXiYHq0qf53k6yI3AuJUrsNh4SlCprFE
Content-Type: application/json

# üö® SUBSTITUA pelo n√∫mero real de uma OT criada!

### 7.2 Buscar por cliente
GET {{otsURL}}/buscar/?cliente_nome=ABC
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5MTY4NDg2LCJpYXQiOjE3NDkxNjQ4ODYsImp0aSI6IjdlYWVlNDBkOGVlZjQ4NjBhYmY2ZDQ0ZDE4ZTdiMjAxIiwidXNlcl9pZCI6Mn0.y7-KP-FAhsXZXiYHq0qf53k6yI3AuJUrsNh4SlCprFE
Content-Type: application/json

### 7.3 Buscar por status
GET {{otsURL}}/buscar/?status=ENTREGUE
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzMzNTEyMjE4LCJpYXQiOjE3MzM1MDg2MTgsImp0aSI6IjAwYWYwMTI1MGI9NzRiODA5ZGRkNGY2OWNhZDVhNzRiIiwidXNlcl9pZCI6Mn0.PQkJVy6jc7D6O_wPH97YWjsUjWh64Hpxlqpn7N1NVPU
Content-Type: application/json

### 7.4 Buscar com m√∫ltiplos filtros
GET {{otsURL}}/buscar/?cliente_nome=ABC&status=EM_TRANSITO&data_inicio=2024-12-01
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5MTY4NDg2LCJpYXQiOjE3NDkxNjQ4ODYsImp0aSI6IjdlYWVlNDBkOGVlZjQ4NjBhYmY2ZDQ0ZDE4ZTdiMjAxIiwidXNlcl9pZCI6Mn0.y7-KP-FAhsXZXiYHq0qf53k6yI3AuJUrsNh4SlCprFE
Content-Type: application/json

# ==============================================================================
# üìä 8. RELAT√ìRIOS E ESTAT√çSTICAS
# ==============================================================================

### 8.1 Estat√≠sticas das OTs
GET {{otsURL}}/stats/
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5MTY4NDg2LCJpYXQiOjE3NDkxNjQ4ODYsImp0aSI6IjdlYWVlNDBkOGVlZjQ4NjBhYmY2ZDQ0ZDE4ZTdiMjAxIiwidXNlcl9pZCI6Mn0.y7-KP-FAhsXZXiYHq0qf53k6yI3AuJUrsNh4SlCprFE
Content-Type: application/json

# Esperado:
# - Estat√≠sticas gerais (total, ativas, finalizadas)
# - Breakdown por status
# - Estat√≠sticas dos √∫ltimos 30 dias
# - Por motorista (apenas log√≠stica/admin)
#
# üêõ DEBUGGING:
# - Observe diferen√ßa entre motorista vs log√≠stica
# - Veja filtragem autom√°tica por usu√°rio

# ==============================================================================
# üõ†Ô∏è 9. DEBUGGING E TROUBLESHOOTING
# ==============================================================================

### 9.1 Debug geral do usu√°rio
GET {{otsURL}}/debug/
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5MTY4NDg2LCJpYXQiOjE3NDkxNjQ4ODYsImp0aSI6IjdlYWVlNDBkOGVlZjQ4NjBhYmY2ZDQ0ZDE4ZTdiMjAxIiwidXNlcl9pZCI6Mn0.y7-KP-FAhsXZXiYHq0qf53k6yI3AuJUrsNh4SlCprFE
Content-Type: application/json

# Esperado:
# - Info do usu√°rio logado
# - Quantas OTs pode ver
# - Total de OTs no sistema

### 9.2 Debug de OT espec√≠fica
GET {{otsURL}}/debug/1/
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5MTY4NDg2LCJpYXQiOjE3NDkxNjQ4ODYsImp0aSI6IjdlYWVlNDBkOGVlZjQ4NjBhYmY2ZDQ0ZDE4ZTdiMjAxIiwidXNlcl9pZCI6Mn0.y7-KP-FAhsXZXiYHq0qf53k6yI3AuJUrsNh4SlCprFE
Content-Type: application/json

# Esperado:
# - Detalhes da OT
# - Permiss√µes calculadas
# - Info do usu√°rio
# - Estado da OT (pode ser editada, transferida, etc)

# ==============================================================================
# üö® 10. TESTES DE ERRO E VALIDA√á√ÉO
# ==============================================================================

### 10.1 Tentar criar OT sem dados obrigat√≥rios
POST {{otsURL}}/
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5MTY4NDg2LCJpYXQiOjE3NDkxNjQ4ODYsImp0aSI6IjdlYWVlNDBkOGVlZjQ4NjBhYmY2ZDQ0ZDE4ZTdiMjAxIiwidXNlcl9pZCI6Mn0.y7-KP-FAhsXZXiYHq0qf53k6yI3AuJUrsNh4SlCprFE
Content-Type: application/json

{
    "observacoes": "Apenas observa√ß√£o, sem dados obrigat√≥rios"
}

# Esperado:
# - Status 400 Bad Request
# - Erros espec√≠ficos dos campos obrigat√≥rios

### 10.2 Tentar transi√ß√£o de status inv√°lida
PATCH {{otsURL}}/1/status/
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5MTY4NDg2LCJpYXQiOjE3NDkxNjQ4ODYsImp0aSI6IjdlYWVlNDBkOGVlZjQ4NjBhYmY2ZDQ0ZDE4ZTdiMjAxIiwidXNlcl9pZCI6Mn0.y7-KP-FAhsXZXiYHq0qf53k6yI3AuJUrsNh4SlCprFE
Content-Type: application/json

{
    "status": "INICIADA"
}

# Se a OT j√° estiver ENTREGUE, isso deve dar erro:
# - Status 400 Bad Request
# - Erro: "N√£o √© poss√≠vel transicionar de Entregue para Iniciada"

### 10.3 Tentar acessar OT sem permiss√£o
GET {{otsURL}}/999/
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5MTY4NDg2LCJpYXQiOjE3NDkxNjQ4ODYsImp0aSI6IjdlYWVlNDBkOGVlZjQ4NjBhYmY2ZDQ0ZDE4ZTdiMjAxIiwidXNlcl9pZCI6Mn0.y7-KP-FAhsXZXiYHq0qf53k6yI3AuJUrsNh4SlCprFE
Content-Type: application/json

# Esperado:
# - Status 404 Not Found se OT n√£o existir
# - Status 403 Forbidden se OT existir mas n√£o for do usu√°rio

### 10.4 Tentar criar OT sem estar logado
POST {{otsURL}}/
Content-Type: application/json

{
    "cliente_nome": "Teste",
    "endereco_entrega": "Teste",
    "cidade_entrega": "Teste"
}

# Esperado:
# - Status 401 Unauthorized
# - Erro de token ausente/inv√°lido

# ==============================================================================
# üéØ 11. FLUXO COMPLETO - CEN√ÅRIO REAL
# ==============================================================================

### 11.1 Cen√°rio: Motorista Jo√£o faz entrega completa

# Passo 1: Jo√£o chega no CD e cria OT
POST {{otsURL}}/
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5MTY4NDg2LCJpYXQiOjE3NDkxNjQ4ODYsImp0aSI6IjdlYWVlNDBkOGVlZjQ4NjBhYmY2ZDQ0ZDE4ZTdiMjAxIiwidXNlcl9pZCI6Mn0.y7-KP-FAhsXZXiYHq0qf53k6yI3AuJUrsNh4SlCprFE
Content-Type: application/json

{
    "cliente_nome": "Distribuidora Norte",
    "endereco_entrega": "Rua Industrial, 500 - Distrito Industrial",
    "cidade_entrega": "Jundia√≠",
    "observacoes": "Carregamento completo - 25 pallets",
    "latitude_origem": -23.5505,
    "longitude_origem": -46.6333,
    "endereco_origem": "CD Matriz"
}

# Passo 2: Jo√£o inicia carregamento
PATCH {{otsURL}}/ID_DA_OT_CRIADA/status/
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5MTY4NDg2LCJpYXQiOjE3NDkxNjQ4ODYsImp0aSI6IjdlYWVlNDBkOGVlZjQ4NjBhYmY2ZDQ0ZDE4ZTdiMjAxIiwidXNlcl9pZCI6Mn0.y7-KP-FAhsXZXiYHq0qf53k6yI3AuJUrsNh4SlCprFE
Content-Type: application/json

{
    "status": "EM_CARREGAMENTO",
    "observacao": "Iniciando carregamento - equipe do CD preparando mercadoria"
}

# Passo 3: Jo√£o sai em tr√¢nsito
PATCH {{otsURL}}/ID_DA_OT_CRIADA/status/
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5MTY4NDg2LCJpYXQiOjE3NDkxNjQ4ODYsImp0aSI6IjdlYWVlNDBkOGVlZjQ4NjBhYmY2ZDQ0ZDE4ZTdiMjAxIiwidXNlcl9pZCI6Mn0.y7-KP-FAhsXZXiYHq0qf53k6yI3AuJUrsNh4SlCprFE
Content-Type: application/json

{
    "status": "EM_TRANSITO",
    "observacao": "Saindo do CD - ETA cliente: 11h30"
}

# Passo 4: Jo√£o finaliza entrega
POST {{otsURL}}/ID_DA_OT_CRIADA/finalizar/
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5MTY4NDg2LCJpYXQiOjE3NDkxNjQ4ODYsImp0aSI6IjdlYWVlNDBkOGVlZjQ4NjBhYmY2ZDQ0ZDE4ZTdiMjAxIiwidXNlcl9pZCI6Mn0.y7-KP-FAhsXZXiYHq0qf53k6yI3AuJUrsNh4SlCprFE
Content-Type: application/json

{
    "observacoes_entrega": "Entrega realizada com sucesso. 25 pallets conferidos e aceitos pelo Sr. Carlos (gerente de recebimento). Sem avarias.",
    "latitude_entrega": -23.1864,
    "longitude_entrega": -46.8842,
    "endereco_entrega_real": "Distribuidora Norte - Dock 3"
}

# ==============================================================================
# üìä C√ìDIGOS DE RESPOSTA ESPERADOS
# ==============================================================================

"""
‚úÖ SUCESSO:
- 200 OK: Opera√ß√£o bem-sucedida (GET, PATCH)
- 201 Created: Recurso criado (POST)

‚ùå ERRO DO CLIENTE:
- 400 Bad Request: Dados inv√°lidos
- 401 Unauthorized: Token ausente/inv√°lido
- 403 Forbidden: Sem permiss√£o
- 404 Not Found: Recurso n√£o encontrado

üî¥ ERRO DO SERVIDOR:
- 500 Internal Server Error: Erro interno (veja logs Django)
"""

# ==============================================================================
# üîß SOLU√á√ÉO DE PROBLEMAS
# ==============================================================================

"""
üö® PROBLEMAS COMUNS:

1. **Erro 401**: 
   - Fa√ßa login novamente
   - Verifique se token n√£o expirou
   - Atualize @accessToken

2. **Erro 403**:
   - Verifique se usu√°rio tem permiss√£o
   - Motorista s√≥ v√™ suas pr√≥prias OTs
   - Use debug endpoint para verificar

3. **Erro 400**:
   - Verifique dados obrigat√≥rios
   - Confira transi√ß√µes de status v√°lidas
   - Veja detalhes nos erros da resposta

4. **Erro 500**:
   - Verifique logs no terminal Django
   - Certifique-se que migra√ß√µes foram aplicadas
   - Confira se todos os imports est√£o corretos

üõ†Ô∏è COMANDOS √öTEIS:

# Aplicar migra√ß√µes
python manage.py migrate

# Criar superusu√°rio
python manage.py createsuperuser

# Rodar servidor
python manage.py runserver

# Ver logs em tempo real
tail -f logs/django.log
"""