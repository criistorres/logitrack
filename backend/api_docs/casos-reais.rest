# ==============================================================================
# LOGITRACK - SIMULA√á√ÉO DE CASOS REAIS DE USO (VERS√ÉO ATUALIZADA)
# ==============================================================================
# 
# üìã Este arquivo simula os casos de uso reais documentados com as corre√ß√µes:
# - Caso 1: Entrega Direta com √önico Motorista (com upload obrigat√≥rio)
# - Caso 2: Transfer√™ncia Planejada entre Motoristas (com valida√ß√µes)
# - üîß CORRE√á√ïES: Status corretos no hist√≥rico + Arquivos obrigat√≥rios
#
# üéØ ORDEM DE EXECU√á√ÉO:
# 1. Configurar usu√°rios
# 2. Executar Caso 1 completo (com uploads)
# 3. Executar Caso 2 completo (com valida√ß√µes)
# 4. Verificar resultados e hist√≥rico correto
#
# ==============================================================================

# VARI√ÅVEIS GLOBAIS
@baseURL = http://localhost:8000
@authURL = {{baseURL}}/api/auth
@otsURL = {{baseURL}}/api/ots

# Tokens de usu√°rios (ATUALIZE COM SEUS TOKENS)
@tokenCarlos = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5Mzg5NTcxLCJpYXQiOjE3NDkzODU5NzEsImp0aSI6ImU2ODVlMWZjOWFlYjQ1NDk4MWM1ZTExYzQwNzFkZTkwIiwidXNlcl9pZCI6M30.RKFwIeW2ERojJMbIrm5K2MxhqVnQ16PAMYOXo5EHzSU
@tokenJose = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5Mzg5NTkxLCJpYXQiOjE3NDkzODU5OTEsImp0aSI6ImViOTFkMTE2MzQxMDQyYzNhOTVlNjU0YWMxZWUzOTQyIiwidXNlcl9pZCI6NH0.Xnwfr26XnxAwz-ackuvUp4abOsmmM2wSp_5sSCE4CEw
@tokenAntonio = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5Mzg5NjA2LCJpYXQiOjE3NDkzODYwMDYsImp0aSI6IjI1OTVkYzdmY2I0MzRjMjJhNDQ5YzI0NzMwNjJlNDcwIiwidXNlcl9pZCI6NX0.LqFhWER_uaI5u_v-CiYVEpansATN6Eoe8MxzYqT2dFU
@tokenLogistica = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5Mzg5NjI2LCJpYXQiOjE3NDkzODYwMjYsImp0aSI6Ijg5NjcxZGYwODkzMTQ1YzE5OGMyNDZhZGM4MzZjNzJiIiwidXNlcl9pZCI6Nn0.os1beyMWwoCVgl1lZ0_Tb_0xpiUrKimiv8cfDPGQhrg

# IDs din√¢micos (ATUALIZE CONFORME SUAS OTs)
@otCaso1 = 1
@otCaso2 = 2
@transferenciaId = 1

# ==============================================================================
# üîê CONFIGURA√á√ÉO INICIAL - CRIAR/LOGAR USU√ÅRIOS
# ==============================================================================

### Setup 1.1 - Registrar Carlos (Motorista do Caso 1)
POST {{authURL}}/register/
Content-Type: application/json

{
    "email": "carlos.motorista@empresa.com",
    "password": "Carlos123!",
    "password_confirm": "Carlos123!",
    "first_name": "Carlos",
    "last_name": "Silva",
    "cpf": "11111111111",
    "phone": "11999111111",
    "role": "motorista",
    "cnh_numero": "11111111111",
    "cnh_categoria": "C",
    "cnh_validade": "2026-12-31"
}

### Setup 1.2 - Login Carlos
POST {{authURL}}/login/
Content-Type: application/json

{
    "email": "carlos.motorista@empresa.com",
    "password": "Carlos123!"
}

# üö® COPIE o access_token para @tokenCarlos

### Setup 2.1 - Registrar Jos√© (Motorista do Caso 2 - Caminh√£o Grande)
POST {{authURL}}/register/
Content-Type: application/json

{
    "email": "jose.caminhao@empresa.com",
    "password": "Jose123!",
    "password_confirm": "Jose123!",
    "first_name": "Jos√©",
    "last_name": "Santos",
    "cpf": "22222222222",
    "phone": "11999222222",
    "role": "motorista",
    "cnh_numero": "22222222222",
    "cnh_categoria": "E",
    "cnh_validade": "2026-12-31"
}

### Setup 2.2 - Login Jos√©
POST {{authURL}}/login/
Content-Type: application/json

{
    "email": "jose.caminhao@empresa.com",
    "password": "Jose123!"
}

# üö® COPIE o access_token para @tokenJose

### Setup 3.1 - Registrar Ant√¥nio (Motorista do Caso 2 - Van)
POST {{authURL}}/register/
Content-Type: application/json

{
    "email": "antonio.van@empresa.com",
    "password": "Antonio123!",
    "password_confirm": "Antonio123!",
    "first_name": "Ant√¥nio",
    "last_name": "Oliveira",
    "cpf": "33333333333",
    "phone": "11999333333",
    "role": "motorista",
    "cnh_numero": "33333333333",
    "cnh_categoria": "B",
    "cnh_validade": "2026-12-31"
}

### Setup 3.2 - Login Ant√¥nio
POST {{authURL}}/login/
Content-Type: application/json

{
    "email": "antonio.van@empresa.com",
    "password": "Antonio123!"
}

# üö® COPIE o access_token para @tokenAntonio

### Setup 4.1 - Registrar Log√≠stica
POST {{authURL}}/register/
Content-Type: application/json

{
    "email": "logistica@empresa.com",
    "password": "Logistica123!",
    "password_confirm": "Logistica123!",
    "first_name": "Maria",
    "last_name": "Log√≠stica",
    "cpf": "44444444444",
    "phone": "11999444444",
    "role": "logistica"
}

### Setup 4.2 - Login Log√≠stica
POST {{authURL}}/login/
Content-Type: application/json

{
    "email": "logistica@empresa.com",
    "password": "Logistica123!"
}

# üö® COPIE o access_token para @tokenLogistica

# ==============================================================================
# üìã CASO 1: ENTREGA DIRETA COM √öNICO MOTORISTA (VERS√ÉO ATUALIZADA)
# ==============================================================================
# 
# üéØ Cen√°rio: Carlos √© motorista da transportadora e precisa fazer um 
# carregamento no CD de S√£o Paulo para entrega em Campinas.
#
# üîß FLUXO ATUALIZADO:
# 1. Carlos chega ao CD (7:30h) - cria OT
# 2. Processo de carregamento (8:00h) - atualiza status
# 3. In√≠cio do transporte (9:15h) - status em tr√¢nsito
# 4. üÜï Upload de documentos (11:25h) - OBRIGAT√ìRIO antes de finalizar
# 5. Entrega ao cliente (11:30h) - finaliza√ß√£o
# 6. Visualiza√ß√£o pela equipe de log√≠stica
#
# ==============================================================================

### CASO 1 - Passo 1: Carlos chega ao CD e registra chegada (7:30h)
POST {{otsURL}}/
Authorization: Bearer {{tokenCarlos}}
Content-Type: application/json

{
    "cliente_nome": "Empresa ABC",
    "endereco_entrega": "Rua das Flores, 123 - Centro",
    "cidade_entrega": "Campinas",
    "observacoes": "Carregamento CD S√£o Paulo ‚Üí Campinas. Cliente aguarda entrega at√© 12h.",
    "latitude_origem": -23.5505,
    "longitude_origem": -46.6333,
    "endereco_origem": "CD S√£o Paulo - Vila Ol√≠mpia"
}

# üö® COPIE o ID da OT para @otCaso1
# Simula√ß√£o: 7:30h - Carlos cria OT ao chegar no CD
# Sistema gera automaticamente: OT + data + sequencial

### CASO 1 - Verifica√ß√£o: Ver OT criada e valida√ß√µes
GET {{otsURL}}/{{otCaso1}}/
Authorization: Bearer {{tokenCarlos}}
Content-Type: application/json

# üîç VERIFICAR na resposta:
# - pode_ser_finalizada: false (sem arquivos)
# - motivo_nao_finalizar: ["Nenhum documento anexado..."]
# - arquivos_count: 0
# - status_anterior: "" (cria√ß√£o inicial)
# - status_novo: "INICIADA"

### CASO 1 - Passo 2: Carlos atualiza durante carregamento (8:00h)
PATCH {{otsURL}}/{{otCaso1}}/
Authorization: Bearer {{tokenCarlos}}
Content-Type: application/json

{
    "observacoes": "Cliente: Empresa ABC | Endere√ßo: Rua das Flores, 123 - Campinas | Tipo: Carga geral - 15 pallets"
}

# üîß CORRE√á√ÉO: Apenas observa√ß√µes, sem status duplicado

### CASO 1 - Passo 2.1: Carlos registra in√≠cio do carregamento
PATCH {{otsURL}}/{{otCaso1}}/status/
Authorization: Bearer {{tokenCarlos}}
Content-Type: application/json

{
    "status": "EM_CARREGAMENTO",
    "observacao": "Equipe do CD iniciou carregamento - 15 pallets de carga geral para Empresa ABC"
}

# üîç VERIFICAR: Status anterior: "INICIADA" ‚Üí Status novo: "EM_CARREGAMENTO"

### CASO 1 - Passo 3: Carlos inicia transporte (9:15h)
PATCH {{otsURL}}/{{otCaso1}}/status/
Authorization: Bearer {{tokenCarlos}}
Content-Type: application/json

{
    "status": "EM_TRANSITO",
    "observacao": "Carregamento conclu√≠do (15 pallets) - Saindo do CD. ETA Campinas: 11:30h via Anhanguera"
}

# üîç VERIFICAR: Status anterior: "EM_CARREGAMENTO" ‚Üí Status novo: "EM_TRANSITO"

### CASO 1 - Verifica√ß√£o: Tentar finalizar sem documentos (deve dar erro)
POST {{otsURL}}/{{otCaso1}}/finalizar/
Authorization: Bearer {{tokenCarlos}}
Content-Type: application/json

{
    "observacoes_entrega": "Teste sem documentos - deve dar erro"
}

# üîß NOVA VALIDA√á√ÉO: Deve retornar erro 400
# ‚ùå Esperado: "N√£o √© poss√≠vel finalizar a OT sem documentos anexados"

### CASO 1 - Passo 4 NOVO: Carlos chega ao cliente e fotografa entrega (11:25h)

# üö® IMPORTANTE: Use curl para upload real de arquivo
# Substitua "canhoto_abc.jpg" por um arquivo real no seu sistema

### Upload 1: Foto da chegada
curl -X POST http://localhost:8000/api/ots/{{otCaso1}}/arquivos/ \
  -H "Authorization: Bearer {{tokenCarlos}}" \
  -F "arquivo=@\"C:\Users\cristian.torres\GitHub\logitrack\lixo1.jpg\""
  -F "tipo=FOTO_ENTREGA" \
  -F "descricao=Foto da chegada na Empresa ABC - Portaria principal"

### Upload 2: Canhoto assinado (simula√ß√£o)
curl -X POST http://localhost:8000/api/ots/{{otCaso1}}/arquivos/ \
  -H "Authorization: Bearer {{tokenCarlos}}" \
  -F "arquivo=@lixo2.pdf" \
  -F "tipo=CANHOTO" \
  -F "descricao=Canhoto assinado pelo Sr. Paulo - Setor de Recebimento"

### CASO 1 - Verifica√ß√£o: Ver OT ap√≥s upload de documentos
GET {{otsURL}}/{{otCaso1}}/
Authorization: Bearer {{tokenCarlos}}
Content-Type: application/json

# üîç VERIFICAR na resposta:
# - pode_ser_finalizada: true (agora tem arquivos)
# - motivo_nao_finalizar: ["OT pode ser finalizada"]
# - arquivos_count: 2 (ou quantos voc√™ fez upload)
# - tem_canhoto: true
# - tem_foto_entrega: true
# - arquivos_por_tipo: {"Canhoto Assinado": 1, "Foto da Entrega": 1}

### CASO 1 - Passo 5: Carlos finaliza a entrega (11:30h)
POST {{otsURL}}/{{otCaso1}}/finalizar/
Authorization: Bearer {{tokenCarlos}}
Content-Type: application/json

{
    "observacoes_entrega": "Entrega realizada com sucesso! 15 pallets conferidos e aceitos pelo Sr. Paulo (gerente de recebimento). Mercadoria sem avarias.",
    "latitude_entrega": -22.9068,
    "longitude_entrega": -47.0626,
    "endereco_entrega_real": "Empresa ABC - Setor de Recebimento - Portaria Principal"
}

# üîç VERIFICAR: Status anterior: "EM_TRANSITO" ‚Üí Status novo: "ENTREGUE"

### CASO 1 - Passo 6: Log√≠stica visualiza entrega conclu√≠da
GET {{otsURL}}/{{otCaso1}}/
Authorization: Bearer {{tokenLogistica}}
Content-Type: application/json

# Simula√ß√£o: Equipe de log√≠stica v√™:
# - Entrega finalizada com sucesso
# - Todos os documentos anexados
# - Timeline completa com status corretos
# - Localiza√ß√£o de origem e entrega

### CASO 1 - Verifica√ß√£o: Timeline completa da OT
GET {{otsURL}}/{{otCaso1}}/
Authorization: Bearer {{tokenCarlos}}
Content-Type: application/json

# üîç VERIFICAR no hist√≥rico (atualizacoes_recentes):
# 1. "OT criada com status Iniciada" (status_anterior: "", status_novo: "INICIADA")
# 2. "Status alterado para Em Carregamento" (status_anterior: "INICIADA", status_novo: "EM_CARREGAMENTO")
# 3. "Status alterado para Em Tr√¢nsito" (status_anterior: "EM_CARREGAMENTO", status_novo: "EM_TRANSITO")
# 4. Upload de arquivos (tipo_atualizacao: "ARQUIVO")
# 5. "Status alterado para Entregue" (status_anterior: "EM_TRANSITO", status_novo: "ENTREGUE")

# ==============================================================================
# üìã CASO 2: TRANSFER√äNCIA PLANEJADA ENTRE MOTORISTAS (VERS√ÉO ATUALIZADA)
# ==============================================================================
#
# üéØ Cen√°rio: Sistema de transfer√™ncia entre ve√≠culo maior (Jos√©) que n√£o pode 
# entrar na regi√£o central e ve√≠culo menor (Ant√¥nio) para √∫ltima milha.
#
# üîß FLUXO ATUALIZADO:
# 1. Jos√© inicia com caminh√£o grande
# 2. Cross-docking em terminal urbano (12:00h)
# 3. Transfer√™ncia para Ant√¥nio com aceita√ß√£o (12:30h)
# 4. Ant√¥nio realiza entregas (13:30h - 17:00h)
# 5. üÜï Upload de documentos (17:10h) - OBRIGAT√ìRIO
# 6. Finaliza√ß√£o completa (17:15h)
#
# ==============================================================================

### CASO 2 - Passo 1: Jos√© chega ao CD com caminh√£o grande
POST {{otsURL}}/
Authorization: Bearer {{tokenJose}}
Content-Type: application/json

{
    "cliente_nome": "Rota Centro SP - Multi Clientes",
    "endereco_entrega": "Centro de S√£o Paulo - M√∫ltiplas entregas (5 pontos)",
    "cidade_entrega": "S√£o Paulo",
    "observacoes": "OPERA√á√ÉO CROSS-DOCKING: 5 entregas centro SP - transferir para van | Zona de restri√ß√£o para ve√≠culos grandes | Clientes: Loja A, Loja B, Escrit√≥rio C, Farm√°cia D, Restaurante E",
    "latitude_origem": -23.5505,
    "longitude_origem": -46.6333,
    "endereco_origem": "CD Principal - S√£o Paulo"
}

# üö® COPIE o ID da OT para @otCaso2

### CASO 2 - Passo 1.1: Jos√© registra carregamento
PATCH {{otsURL}}/{{otCaso2}}/status/
Authorization: Bearer {{tokenJose}}
Content-Type: application/json

{
    "status": "EM_CARREGAMENTO",
    "observacao": "Carregando mercadorias para 5 clientes no centro de SP. Planejamento: transferir no terminal urbano √†s 12h."
}

### CASO 2 - Passo 1.2: Jos√© inicia transporte para terminal
PATCH {{otsURL}}/{{otCaso2}}/status/
Authorization: Bearer {{tokenJose}}
Content-Type: application/json

{
    "status": "EM_TRANSITO",
    "observacao": "Saindo para terminal urbano - Cross-docking planejado √†s 12:00h. Carga: 5 pontos de entrega no centro."
}

### CASO 2 - Passo 2: Jos√© chega ao terminal urbano (12:00h)
POST {{otsURL}}/{{otCaso2}}/transferir/
Authorization: Bearer {{tokenJose}}
Content-Type: application/json

{
    "motorista_destino_id": 5,
    "motivo": "Transfer√™ncia planejada para ve√≠culo adequado - Caminh√£o grande n√£o pode entrar no centro. Transferindo para van especializada em entregas urbanas.",
    "latitude": -23.5400,
    "longitude": -46.6200,
    "endereco": "Terminal Urbano - P√°tio de Cross-docking - Dock 3"
}

# üö® SUBSTITUA "6" pelo ID real do Ant√¥nio
# üö® COPIE o ID da transfer√™ncia para @transferenciaId

### CASO 2 - Verifica√ß√£o: Status da transfer√™ncia criada
GET {{otsURL}}/transferencias/{{transferenciaId}}/
Authorization: Bearer {{tokenJose}}
Content-Type: application/json

# üîç VERIFICAR: status: "AGUARDANDO_ACEITACAO" (novo sistema)

### CASO 2 - Passo 3: Ant√¥nio verifica transfer√™ncias pendentes
GET {{otsURL}}/transferencias/minhas/
Authorization: Bearer {{tokenAntonio}}
Content-Type: application/json

# üîç VERIFICAR se√ß√£o "para_aceitar" com a transfer√™ncia

### CASO 2 - Passo 3.1: Ant√¥nio aceita a transfer√™ncia (12:30h)
POST {{otsURL}}/transferencias/{{transferenciaId}}/aceitar/
Authorization: Bearer {{tokenAntonio}}
Content-Type: application/json

{
    "observacao": "Transfer√™ncia aceita! Cheguei no terminal, conferindo mercadorias das 5 entregas e assumindo responsabilidade. Van pronta para opera√ß√£o no centro."
}

### CASO 2 - Passo 3.2: Verificar que OT agora √© do Ant√¥nio
GET {{otsURL}}/{{otCaso2}}/
Authorization: Bearer {{tokenAntonio}}
Content-Type: application/json

# üîç VERIFICAR:
# - motorista_atual agora √© Ant√¥nio
# - Timeline mostra a transfer√™ncia aceita
# - Status continua "EM_TRANSITO"

### CASO 2 - Passo 4: Ant√¥nio adiciona observa√ß√µes sobre entregas (13:30h)
PATCH {{otsURL}}/{{otCaso2}}/
Authorization: Bearer {{tokenAntonio}}
Content-Type: application/json

{
    "observacoes": "PROG ENTREGAS CENTRO SP: 1)Loja A-R.25Mar√ßo(13:45) | 2)Loja B-R.Direita(14:30) | 3)Escrit√≥rio C-R.Liberdade(15:15) | 4)Farm√°cia D-R.S√£oBento(16:00) | 5)Restaurante E-R.Augusta(16:45)"
}

### CASO 2 - Passo 4.1: Ant√¥nio registra progresso das entregas
PATCH {{otsURL}}/{{otCaso2}}/
Authorization: Bearer {{tokenAntonio}}
Content-Type: application/json

{
    "observacoes": "ENTREGAS EM ANDAMENTO: ‚úÖCliente 1-Loja A (13:45h) | ‚úÖCliente 2-Loja B (14:30h) | ‚úÖCliente 3-Escrit√≥rio C (15:15h) | ‚úÖCliente 4-Farm√°cia D (16:00h) | ‚úÖCliente 5-Restaurante E (16:45h) - TODAS CONCLU√çDAS!"
}

### CASO 2 - Verifica√ß√£o: Tentar finalizar sem documentos (deve dar erro)
POST {{otsURL}}/{{otCaso2}}/finalizar/
Authorization: Bearer {{tokenAntonio}}
Content-Type: application/json

{
    "observacoes_entrega": "Teste sem documentos das 5 entregas"
}

# ‚ùå Esperado: Erro 400 - "N√£o √© poss√≠vel finalizar OT sem documentos anexados"

### CASO 2 - Passo 5 NOVO: Ant√¥nio coleta evid√™ncias das entregas (17:10h)

# üö® IMPORTANTE: Use curl para uploads reais

### Upload 1: Foto consolidada das entregas
# curl -X POST http://localhost:8000/api/ots/{{otCaso2}}/arquivos/ \
#   -H "Authorization: Bearer {{tokenAntonio}}" \
#   -F "arquivo=@entregas_consolidadas.jpg" \
#   -F "tipo=FOTO_ENTREGA" \
#   -F "descricao=Foto consolidada das 5 entregas realizadas no centro de SP"

### Upload 2: Canhotos compilados
# curl -X POST http://localhost:8000/api/ots/{{otCaso2}}/arquivos/ \
#   -H "Authorization: Bearer {{tokenAntonio}}" \
#   -F "arquivo=@canhotos_5_clientes.pdf" \
#   -F "tipo=CANHOTO" \
#   -F "descricao=Canhotos assinados dos 5 clientes - opera√ß√£o cross-docking conclu√≠da"

### Upload 3: Comprovante de cross-docking
# curl -X POST http://localhost:8000/api/ots/{{otCaso2}}/arquivos/ \
#   -H "Authorization: Bearer {{tokenAntonio}}" \
#   -F "arquivo=@comprovante_terminal.pdf" \
#   -F "tipo=COMPROVANTE" \
#   -F "descricao=Comprovante de transfer√™ncia no terminal urbano - Jos√© para Ant√¥nio"

### CASO 2 - Verifica√ß√£o: OT ap√≥s uploads
GET {{otsURL}}/{{otCaso2}}/
Authorization: Bearer {{tokenAntonio}}
Content-Type: application/json

# üîç VERIFICAR:
# - pode_ser_finalizada: true
# - arquivos_count: 3
# - arquivos_por_tipo mostra os tipos enviados

### CASO 2 - Passo 6: Ant√¥nio finaliza todas as entregas (17:15h)
POST {{otsURL}}/{{otCaso2}}/finalizar/
Authorization: Bearer {{tokenAntonio}}
Content-Type: application/json

{
    "observacoes_entrega": "OPERA√á√ÉO CROSS-DOCKING CONCLU√çDA COM SUCESSO! 5 entregas realizadas no centro de SP: ‚úÖLoja A ‚úÖLoja B ‚úÖEscrit√≥rio C ‚úÖFarm√°cia D ‚úÖRestaurante E. Todos os canhotos coletados. Transfer√™ncia Jos√©‚ÜíAnt√¥nio executada perfeitamente.",
    "latitude_entrega": -23.5475,
    "longitude_entrega": -46.6361,
    "endereco_entrega_real": "Centro SP - √öltima entrega: Restaurante E - Rua Augusta, 500"
}

### CASO 2 - Verifica√ß√£o: Jos√© v√™ OT finalizada por Ant√¥nio
GET {{otsURL}}/{{otCaso2}}/
Authorization: Bearer {{tokenJose}}
Content-Type: application/json

# Jos√© pode ver que "sua" OT foi finalizada com sucesso por Ant√¥nio
# Hist√≥rico completo mostra toda a opera√ß√£o com status corretos

### CASO 2 - Verifica√ß√£o: Log√≠stica v√™ opera√ß√£o completa
GET {{otsURL}}/{{otCaso2}}/
Authorization: Bearer {{tokenLogistica}}
Content-Type: application/json

# üîç VERIFICAR timeline completa:
# 1. Criada por Jos√©
# 2. Status: INICIADA ‚Üí EM_CARREGAMENTO ‚Üí EM_TRANSITO
# 3. Transfer√™ncia solicitada por Jos√©
# 4. Transfer√™ncia aceita por Ant√¥nio
# 5. Uploads de documentos
# 6. Finalizada por Ant√¥nio como ENTREGUE

# ==============================================================================
# üìä COMPARA√á√ÉO E AN√ÅLISE DOS CASOS (VERS√ÉO ATUALIZADA)
# ==============================================================================

### An√°lise 1: Estat√≠sticas gerais com valida√ß√µes
GET {{otsURL}}/stats/
Authorization: Bearer {{tokenLogistica}}
Content-Type: application/json

# üîç VERIFICAR que estat√≠sticas incluem OTs finalizadas corretamente

### An√°lise 2: Verificar hist√≥rico de transfer√™ncias
GET {{otsURL}}/transferencias/minhas/
Authorization: Bearer {{tokenLogistica}}
Content-Type: application/json

# Hist√≥rico de todas as transfer√™ncias com status corretos

### An√°lise 3: Compara√ß√£o de efici√™ncia operacional
GET {{otsURL}}/buscar/?data_inicio=2024-12-06
Authorization: Bearer {{tokenLogistica}}
Content-Type: application/json

# Busca todas as OTs do dia para an√°lise de performance

# ==============================================================================
# üîÑ CEN√ÅRIO ALTERNATIVO: ERRO POR FALTA DE DOCUMENTOS
# ==============================================================================

### Alternativo 1: Jos√© cria nova OT sem upload
POST {{otsURL}}/
Authorization: Bearer {{tokenJose}}
Content-Type: application/json

{
    "cliente_nome": "Teste Sem Documentos",
    "endereco_entrega": "Endere√ßo de teste para falha",
    "cidade_entrega": "S√£o Paulo",
    "observacoes": "OT para testar erro de finaliza√ß√£o sem documentos"
}

### Alternativo 2: Colocar em tr√¢nsito
PATCH {{otsURL}}/NOVA_OT_ID/status/
Authorization: Bearer {{tokenJose}}
Content-Type: application/json

{
    "status": "EM_TRANSITO",
    "observacao": "Teste para tentativa de finaliza√ß√£o sem documentos"
}

### Alternativo 3: Tentar finalizar sem documentos (DEVE DAR ERRO)
POST {{otsURL}}/NOVA_OT_ID/finalizar/
Authorization: Bearer {{tokenJose}}
Content-Type: application/json

{
    "observacoes_entrega": "Tentativa de finaliza√ß√£o sem documentos obrigat√≥rios"
}

# ‚ùå Esperado:
# - Status 400 Bad Request
# - "N√£o √© poss√≠vel finalizar a OT sem documentos anexados"
# - Lista dos tipos aceitos: CANHOTO, FOTO_ENTREGA, COMPROVANTE, OUTRO
# - Endpoint para upload: /api/ots/{id}/arquivos/

# ==============================================================================
# üîÑ CEN√ÅRIO ALTERNATIVO: RECUSA DE TRANSFER√äNCIA
# ==============================================================================

### Alternativo 4: Jos√© cria OT para teste de recusa
POST {{otsURL}}/
Authorization: Bearer {{tokenJose}}
Content-Type: application/json

{
    "cliente_nome": "Teste Recusa Transfer√™ncia",
    "endereco_entrega": "Endere√ßo para teste de recusa",
    "cidade_entrega": "S√£o Paulo",
    "observacoes": "OT para testar cen√°rio de recusa de transfer√™ncia"
}

### Alternativo 5: Jos√© tenta transferir para Ant√¥nio
POST {{otsURL}}/NOVA_OT_ID/transferir/
Authorization: Bearer {{tokenJose}}
Content-Type: application/json

{
    "motorista_destino_id": 6,
    "motivo": "Teste de recusa - Ant√¥nio pode estar ocupado"
}

### Alternativo 6: Ant√¥nio recusa por estar ocupado
POST {{otsURL}}/transferencias/NOVA_TRANSFER_ID/recusar/
Authorization: Bearer {{tokenAntonio}}
Content-Type: application/json

{
    "observacao": "N√£o posso aceitar - ainda finalizando entregas da opera√ß√£o cross-docking anterior. Van em uso at√© 18h."
}

# üîç VERIFICAR: 
# - Status da transfer√™ncia: REJEITADA
# - OT continua com Jos√© (motorista_atual n√£o muda)

### Alternativo 7: Log√≠stica faz nova transfer√™ncia ap√≥s recusa
POST {{otsURL}}/NOVA_OT_ID/transferir/
Authorization: Bearer {{tokenLogistica}}
Content-Type: application/json

{
    "motorista_destino_id": 4,
    "motivo": "Reagendamento ap√≥s recusa do Ant√¥nio - Transferindo para Carlos que est√° dispon√≠vel"
}

# üîç VERIFICAR:
# - Status: APROVADA (log√≠stica pode aprovar diretamente)
# - Motorista atual atualizado imediatamente

# ==============================================================================
# üì± SIMULA√á√ÉO MOBILE - VALIDA√á√ïES EM TEMPO REAL
# ==============================================================================

### Mobile 1: Carlos verifica se pode finalizar sua OT
GET {{otsURL}}/{{otCaso1}}/
Authorization: Bearer {{tokenCarlos}}
Content-Type: application/json

# üîç App mobile mostra:
# - pode_ser_finalizada: true/false
# - motivo_nao_finalizar: array com motivos
# - arquivos_count: n√∫mero de documentos
# - Bot√£o finalizar habilitado/desabilitado

### Mobile 2: Ant√¥nio verifica transfer√™ncias com novas valida√ß√µes
GET {{otsURL}}/transferencias/minhas/
Authorization: Bearer {{tokenAntonio}}
Content-Type: application/json

# üîç App mobile categoriza automaticamente:
# - para_aceitar: transfer√™ncias aguardando sua aceita√ß√£o
# - aguardando_aprovacao: transfer√™ncias que ele solicitou
# - minhas_aguardando_resposta: que ele transferiu para outros

### Mobile 3: Upload via mobile (simula√ß√£o)
# Em um app real, isso seria feito via camera/galeria
# curl -X POST http://localhost:8000/api/ots/{{otCaso1}}/arquivos/ \
#   -H "Authorization: Bearer {{tokenCarlos}}" \
#   -F "arquivo=@camera_photo.jpg" \
#   -F "tipo=FOTO_ENTREGA" \
#   -F "descricao=Foto tirada pelo app mobile no momento da entrega"

# ==============================================================================
# üìã RELAT√ìRIO FINAL DOS CASOS (VERS√ÉO ATUALIZADA)
# ==============================================================================

### Relat√≥rio 1: An√°lise completa do Caso 1
GET {{otsURL}}/debug/{{otCaso1}}/
Authorization: Bearer {{tokenLogistica}}
Content-Type: application/json

# üîç VERIFICAR:
# - Timeline com status corretos (anterior ‚â† novo)
# - Documentos obrigat√≥rios anexados
# - Opera√ß√£o simples e eficiente

### Relat√≥rio 2: An√°lise completa do Caso 2
GET {{otsURL}}/debug/{{otCaso2}}/
Authorization: Bearer {{tokenLogistica}}
Content-Type: application/json

# üîç VERIFICAR:
# - Transfer√™ncia com aceita√ß√£o funcionando
# - Cross-docking documentado corretamente
# - Colabora√ß√£o entre motoristas

### Relat√≥rio 3: M√©tricas de conformidade
GET {{otsURL}}/stats/
Authorization: Bearer {{tokenLogistica}}
Content-Type: application/json

# üîç VERIFICAR:
# - Todas as OTs finalizadas t√™m documentos
# - Sistema for√ßa compliance operacional
# - Redu√ß√£o de problemas por falta de evid√™ncias

# ==============================================================================
# üìä BENEF√çCIOS DEMONSTRADOS (VERS√ÉO ATUALIZADA)
# ==============================================================================

"""
‚úÖ CASO 1 - ENTREGA DIRETA MELHORADA:
- Simplicidade operacional mantida
- Responsabilidade √∫nica (Carlos)  
- Timeline linear e clara com status corretos
- üÜï Documenta√ß√£o obrigat√≥ria garante compliance
- üÜï Hist√≥rico preciso para auditoria

‚úÖ CASO 2 - TRANSFER√äNCIA APRIMORADA:
- Otimiza√ß√£o de recursos (ve√≠culos adequados)
- Especializa√ß√£o por regi√£o
- üÜï Sistema de aceita√ß√£o evita transfer√™ncias for√ßadas
- üÜï Documenta√ß√£o completa da opera√ß√£o cross-docking
- üÜï Rastreabilidade total de responsabilidades

üéØ SISTEMA DE ACEITA√á√ÉO APRIMORADO:
- Motorista de destino tem controle total
- Evita transfer√™ncias indesejadas
- Permite reagendamentos inteligentes
- üÜï Status corretos em todo o hist√≥rico
- üÜï Timeline precisa para an√°lise

üì± CARACTER√çSTICAS MOBILE MELHORADAS:
- Atualiza√ß√µes em tempo real
- Valida√ß√µes visuais (pode/n√£o pode finalizar)
- üÜï Upload obrigat√≥rio via camera
- üÜï Feedback claro sobre documentos pendentes
- Interface intuitiva para aceita√ß√£o

üîÑ FLEXIBILIDADE COM COMPLIANCE:
- Transfer√™ncia direta com aceita√ß√£o
- Aprova√ß√£o da log√≠stica quando necess√°rio
- üÜï Imposs√≠vel finalizar sem evid√™ncias
- üÜï Hist√≥rico audit√°vel e preciso
- Cancelamento a qualquer momento

üìä VISIBILIDADE E CONTROLE:
- Log√≠stica acompanha tudo em tempo real
- üÜï M√©tricas de compliance de documenta√ß√£o
- üÜï Relat√≥rios com status hist√≥rico correto
- Rastreabilidade completa de opera√ß√µes
- An√°lise de performance por motorista

üõ°Ô∏è COMPLIANCE E AUDITORIA:
- üÜï Documenta√ß√£o obrigat√≥ria para finaliza√ß√£o
- üÜï Hist√≥rico de status preciso e audit√°vel
- üÜï Evid√™ncias fotogr√°ficas de todas as entregas
- üÜï Timeline completa de responsabilidades
- üÜï Redu√ß√£o de disputas por falta de evid√™ncias

üîß MELHORIAS T√âCNICAS:
- Status anterior/novo corretos no hist√≥rico
- Valida√ß√µes robustas antes de finaliza√ß√£o
- Mensagens de erro claras e orientativas
- Performance otimizada nas transi√ß√µes
- Sistema robusto contra inconsist√™ncias
"""

# ==============================================================================
# üö® INSTRU√á√ïES IMPORTANTES PARA TESTE
# ==============================================================================

"""
üéØ ANTES DE EXECUTAR:

1. **Atualize os tokens:**
   - Execute os logins e copie os access_tokens reais
   - Substitua @tokenCarlos, @tokenJose, @tokenAntonio, @tokenLogistica

2. **Prepare arquivos para upload:**
   - Crie arquivos teste: canhoto.jpg, foto_entrega.jpg, comprovante.pdf
   - Use comandos curl fornecidos com arquivos reais
   - Ou teste com qualquer imagem/PDF pequeno

3. **Execute na ordem sugerida:**
   - Setup completo primeiro
   - Caso 1 completo (incluindo uploads)
   - Caso 2 completo (incluindo uploads) 
   - Cen√°rios alternativos

4. **Verifique as corre√ß√µes:**
   - ‚úÖ Status anterior ‚â† status novo no hist√≥rico
   - ‚úÖ Erro ao tentar finalizar sem documentos
   - ‚úÖ Mensagens claras sobre documentos obrigat√≥rios
   - ‚úÖ Novos campos na API (pode_ser_finalizada, etc.)

üîß COMANDOS √öTEIS:

# Ver todas as OTs:
GET {{otsURL}}/
Authorization: Bearer {{tokenLogistica}}

# Ver transfer√™ncias pendentes:
GET {{otsURL}}/transferencias/minhas/
Authorization: Bearer {{tokenAntonio}}

# Debug de OT espec√≠fica:
GET {{otsURL}}/debug/{{otId}}/
Authorization: Bearer {{tokenLogistica}}

üö® PROBLEMAS COMUNS:

- Erro 400 "Status j√° √© X": Use endpoints /status/ apenas para mudan√ßas reais
- Erro 400 "Sem documentos": Use curl para upload antes de finalizar
- Erro 403: Verifique se token est√° correto e n√£o expirou
- IDs din√¢micos: Sempre atualize @otCaso1, @otCaso2, @transferenciaId

‚úÖ SUCESSO ESPERADO:

Ao final dos testes, voc√™ deve ter:
- 2 OTs finalizadas com documentos
- Hist√≥rico de status correto
- 1 transfer√™ncia aceita com sucesso
- Timeline completa e audit√°vel
- Sistema robusto e compliance assegurado
"""