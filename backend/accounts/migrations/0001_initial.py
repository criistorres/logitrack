# Generated by Django 5.2.1 on 2025-05-28 02:00

import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(error_messages={'unique': 'Um usuário com este email já existe.'}, help_text='Endereço de email único usado para login', max_length=254, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(blank=True, help_text='Primeiro nome do usuário', max_length=30, verbose_name='Nome')),
                ('last_name', models.CharField(blank=True, help_text='Sobrenome do usuário', max_length=30, verbose_name='Sobrenome')),
                ('cpf', models.CharField(error_messages={'unique': 'Um usuário com este CPF já existe.'}, help_text='CPF com 11 dígitos (apenas números)', max_length=11, unique=True, validators=[django.core.validators.RegexValidator(message='CPF deve conter exatamente 11 dígitos numéricos.', regex='^\\d{11}$')], verbose_name='CPF')),
                ('phone', models.CharField(blank=True, help_text='Número de telefone com DDD', max_length=15, validators=[django.core.validators.RegexValidator(message='Telefone deve ter entre 10 e 15 dígitos.', regex='^\\+?1?\\d{10,15}$')], verbose_name='Telefone')),
                ('role', models.CharField(choices=[('motorista', 'Motorista'), ('logistica', 'Logística'), ('admin', 'Administrador')], default='motorista', help_text='Função do usuário no sistema', max_length=30, verbose_name='Função')),
                ('is_active', models.BooleanField(default=False, help_text='Designa se este usuário deve ser tratado como ativo. Desmarque ao invés de deletar contas.', verbose_name='Ativo')),
                ('is_staff', models.BooleanField(default=False, help_text='Designa se o usuário pode acessar o site de administração.', verbose_name='Membro da equipe')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, help_text='Data e hora em que o usuário foi registrado', verbose_name='Data de registro')),
                ('cnh_numero', models.CharField(blank=True, help_text='Número da Carteira Nacional de Habilitação', max_length=20, verbose_name='Número CNH')),
                ('cnh_categoria', models.CharField(blank=True, choices=[('A', 'Categoria A'), ('B', 'Categoria B'), ('AB', 'Categorias A e B'), ('C', 'Categoria C'), ('D', 'Categoria D'), ('E', 'Categoria E')], help_text='Categoria da CNH (A, B, C, D, E)', max_length=5, verbose_name='Categoria CNH')),
                ('cnh_validade', models.DateField(blank=True, help_text='Data de validade da CNH', null=True, verbose_name='Validade CNH')),
                ('foto_perfil', models.ImageField(blank=True, help_text='Foto do perfil do usuário', null=True, upload_to='usuarios/perfil/%Y/%m/', verbose_name='Foto de Perfil')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'ordering': ['-date_joined'],
            },
        ),
    ]
